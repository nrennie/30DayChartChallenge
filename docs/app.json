[{"name":"app.R","content":"library(shiny)\r\nlibrary(dplyr)\r\nlibrary(htmltools)\r\nlibrary(glue)\r\nlibrary(rlang)\r\nlibrary(shinythemes)\r\nlibrary(shinyWidgets)\r\n\r\n# Data\r\nload(url(\"https://raw.githubusercontent.com/nrennie/30DayChartChallenge/main/data/all_data.RData\"))\r\nall_years <- unique(all_data$year)\r\n\r\n# Define UI for app that draws a histogram ----\r\nui <- fluidPage(\r\n\r\n  theme = shinytheme(\"darkly\"),\r\n\r\n  titlePanel(\"30 Day Chart Challenge\"),\r\n\r\n  sidebarLayout(\r\n\r\n    sidebarPanel(\r\n      markdown(\"[Nicola Rennie](https://github.com/nrennie)\r\n\r\nThe 30 Day Chart Challenge is an annual data visualization challenge that takes place throughout April. Each day, participants create and share a chart based on a given daily prompt. The challenge encourages creativity, data storytelling, and improving data visualisation skills. It typically follows a structured theme for each week, such as comparisons, distributions, or time series. People usually share their work on social media using the hashtag #30DayChartChallenge.\r\n\r\nMy contributions can be found on [GitHub](https://github.com/nrennie/30DayChartChallenge), and you can use this Shiny app to explore my visualisations with links to code for each individual plot. You can also follow my attempts on [Mastodon](https://fosstodon.org/@nrennie) and [BlueSky](https://bsky.app/profile/nrennie.bsky.social).\r\n\"),\r\nhtmltools::hr(),\r\nshinyWidgets::pickerInput(\r\n  inputId = \"year_select\",\r\n  \"Choose a year:\",\r\n  choices = all_years\r\n),\r\n# choose a plot\r\nshiny::uiOutput(\"select_img\"),\r\nshiny::textOutput(\"tools_used\"),\r\nhtmltools::br(),\r\n# display information\r\nshiny::htmlOutput(\"code_link\"),\r\nhtmltools::br(),\r\nwidth = 6\r\n    ),\r\n\r\nmainPanel(\r\n  shiny::htmlOutput(\"plot_img\"),\r\n  htmltools::br(),\r\n  width = 6\r\n)\r\n  )\r\n)\r\n\r\nserver <- function(input, output) {\r\n  # Get data\r\n  all_titles <- reactive({\r\n    req(input$year_select)\r\n      all_titles <- all_data %>%\r\n        dplyr::filter(year == (input$year_select)) %>%\r\n        dplyr::pull(prompt)\r\n  })\r\n\r\n  # Select title\r\n  output$select_img <- renderUI({\r\n    shinyWidgets::pickerInput(\r\n      inputId = \"plot_title\",\r\n      \"Select a plot:\",\r\n      choices = all_titles()\r\n    )\r\n  })\r\n\r\n  # Get data\r\n  plot_data <- reactive({\r\n    req(input$plot_title)\r\n    dplyr::filter(all_data, year == input$year_select, prompt == input$plot_title)\r\n  })\r\n\r\n  ## Image display\r\n  img_path <- shiny::reactive({\r\n    glue::glue(\"{plot_data()$image_url}\")\r\n  })\r\n\r\n  output$plot_img <- shiny::renderText({\r\n    c('<img src=\"', img_path(), '\" width=\"100%\">')\r\n  })\r\n\r\n  ## Tools used\r\n  output$tools_used <- shiny::renderText({\r\n    glue::glue(\r\n      \"This plot was made with {plot_data()$tool}.\"\r\n    )\r\n  })\r\n\r\n  ### Code link\r\n  code_path <- shiny::reactive({\r\n    if (plot_data()$tool == \"R\") {\r\n      glue::glue(\r\n        \"https://github.com/nrennie/30DayChartChallenge/tree/main/{plot_data()$year}/scripts/day_{plot_data()$number}.R\"\r\n      )\r\n    } else if (plot_data()$tool == \"Python\") {\r\n      glue::glue(\r\n        \"https://github.com/nrennie/30DayChartChallenge/tree/main/{plot_data()$year}/scripts/day_{plot_data()$number}.py\"\r\n      )\r\n\r\n    } else if (plot_data()$tool == \"ObservableJS\") {\r\n      glue::glue(\r\n        \"https://github.com/nrennie/30DayChartChallenge/tree/main/{plot_data()$year}/scripts/day_{plot_data()$number}/index.qmd\"\r\n      )\r\n    } else {\r\n      NA\r\n    }\r\n  })\r\n\r\n  output$code_link <- shiny::renderText({\r\n    if (!is.na(code_path())) {\r\n      glue::glue(\r\n        '<b>Code is available at<\/b>: <a href=\"{code_path()}\"  target=\"_blank\">{code_path()}<\/a>.'\r\n      )\r\n    } else {\r\n      \"Code is not available for this visualisation.\"\r\n    }\r\n  })\r\n\r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
